---
name: Build and Publish Docker Image

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  workflow_dispatch:
    inputs:
      push_image:
        description: 'Push image to registry'
        required: false
        default: true
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      security-events: write

    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      image-tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version information
        id: versions
        run: |
          source build/versions.mk
          echo "pgvector_version=$PGVECTOR_VERSION" >> $GITHUB_OUTPUT
          echo "pgvector_commit=$PGVECTOR_COMMIT" >> $GITHUB_OUTPUT
          echo "age_version=$AGE_VERSION" >> $GITHUB_OUTPUT
          echo "age_branch=$AGE_BRANCH" >> $GITHUB_OUTPUT
          echo "age_commit=$AGE_COMMIT" >> $GITHUB_OUTPUT
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.versions.outputs.image_name }}
          flavor: |
            latest=auto
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=pgvector-${{ steps.versions.outputs.pgvector_version }}-age-${{ steps.versions.outputs.age_version }}
            type=raw,value={{branch}}-{{date 'YYYY-MM-DD'}}-{{sha}},enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: build/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: >-
            ${{ github.event_name != 'pull_request' &&
                (github.event_name != 'workflow_dispatch' || inputs.push_image) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}
            PGVECTOR_VERSION=${{ steps.versions.outputs.pgvector_version }}
            PGVECTOR_COMMIT=${{ steps.versions.outputs.pgvector_commit }}
            AGE_BRANCH=${{ steps.versions.outputs.age_branch }}
            AGE_VERSION=${{ steps.versions.outputs.age_version }}
            AGE_COMMIT=${{ steps.versions.outputs.age_commit }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        if: steps.build.outputs.digest != ''
        with:
          image-ref: ${{ steps.versions.outputs.image_name }}@${{ steps.build.outputs.digest }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: steps.build.outputs.digest != ''
        with:
          sarif_file: trivy-results.sarif
          category: 'trivy-published-image'

      - name: Generate image summary
        if: steps.build.outputs.digest != ''
        run: |
          echo "## Docker Image Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image**: \`${{ steps.versions.outputs.image_name }}\`" >> \
            $GITHUB_STEP_SUMMARY
          echo "**Digest**: \`${{ steps.build.outputs.digest }}\`" >> \
            $GITHUB_STEP_SUMMARY
          echo "**Tags**:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Extensions**:" >> $GITHUB_STEP_SUMMARY
          {
            echo "- pgvector: \`${{ steps.versions.outputs.pgvector_version }}\`"
            echo "  (\`${{ steps.versions.outputs.pgvector_commit }}\`)"
            echo "- Apache AGE: \`${{ steps.versions.outputs.age_version }}\`"
            echo "  (\`${{ steps.versions.outputs.age_branch }}@${{ steps.versions.outputs.age_commit }}\`)"
          } >> $GITHUB_STEP_SUMMARY

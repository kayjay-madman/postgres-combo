name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ci-${{ github.sha }}
      IMAGE_REFERENCE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ci-${{ github.sha }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install tooling
        run: |
          sudo apt-get update
          sudo apt-get install -y jq bc
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

      - name: Prepare environment
        run: |
          cat <<EOF > .env
POSTGRES_PASSWORD=ci_test_password_123
POSTGRES_USER=postgres
POSTGRES_DB=postgres
POSTGRES_HOST_PORT=55432
CONTAINER_NAME=postgres-combo
IMAGE_NAME=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
IMAGE_TAG=${IMAGE_TAG}
EOF

      - name: Build image (amd64)
        run: |
          make build IMAGE_TAG=${IMAGE_TAG} BUILD_CMD="docker buildx build --load"

      - name: Run tests with hardened compose overlay
        run: |
          make test IMAGE_TAG=${IMAGE_TAG}

      - name: Run security scan
        env:
          IMAGE_REFERENCE: ${{ env.IMAGE_REFERENCE }}
        run: |
          make scan

      - name: Upload Trivy reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: security-reports/
          if-no-files-found: ignore
